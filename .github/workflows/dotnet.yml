name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Restore dependencies
      run: dotnet restore zbw.Auftragsverwaltung.sln
    - name: Build
      run: dotnet build zbw.Auftragsverwaltung.sln --no-restore
    - name: Test
      run: dotnet test zbw.Auftragsverwaltung.sln --no-build --verbosity normal
  
  semantic_release:
    runs-on: ubuntu-latest
    name: Semantic Release
    needs: build
    steps:
      
      - uses: actions/checkout@v1
      
      - uses: codfish/semantic-release-action@v1
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  publish_release_backend:
    runs-on: ubuntu-latest
    name: Publish Backend
    needs: [build, semantic_release]
    steps:
      - uses: actions/checkout@v2
        name: Checkout
       
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: huberit/auftragsverwaltung.backend
      
      
      - name: Login to Digital Ocean
        uses: docker/login-action@v1 
        with:
          username: ${{ env.DOUNAME }}
          password: ${{ env.DOPW }}
          registry: registry.digitalocean.com
        env:
          DOUNAME: ${{ secrets.DOCKER_USERNAME }}
          DOPW: ${{ secrets.DOCKER_PASSWORD }}
       
      - name: Build and publish
        uses: docker/build-push-action@v2
        with:
          context: .
          file: src/zbw.Auftragsverwaltung.Api/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        
