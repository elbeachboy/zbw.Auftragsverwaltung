name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Restore dependencies
      run: dotnet restore zbw.Auftragsverwaltung.sln
    - name: Build
      run: dotnet build zbw.Auftragsverwaltung.sln --no-restore
    - name: Test
      run: dotnet test zbw.Auftragsverwaltung.sln --no-build --verbosity normal
  
  semantic_release:
    runs-on: ubuntu-latest
    name: Semantic Release
    needs: build
    steps:
      
      - uses: actions/checkout@v1
      
      - uses: codfish/semantic-release-action@v1
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          
  publish_release_backend:
    runs-on: ubuntu-latest
    name: Publish Backend
    needs: [build, semantic_release]
    steps:
      - uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - uses: ripplr-io/docr-docker-publish@v1
        with:
          # Image path in the format registry-name/image-name
          image_path: huberit/zbw.auftragsverwaltung.backend
          # The path + name of the Dockerfile you want to build (-f flag)
          dockerfile: src/zbw.Auftragsverwaltung.Api/Dockerfile
    
