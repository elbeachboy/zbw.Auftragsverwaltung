name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Restore dependencies
      run: dotnet restore zbw.Auftragsverwaltung.sln
    - name: Build
      run: dotnet build zbw.Auftragsverwaltung.sln --no-restore
    - name: Test
      run: dotnet test zbw.Auftragsverwaltung.sln --no-build --verbosity normal
  
  semantic_release:
    runs-on: ubuntu-latest
    name: Semantic Release
    needs: build
    steps:
      
      - uses: actions/checkout@v1
      
      - uses: codfish/semantic-release-action@v1
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          
  publish_release_backend:
    runs-on: ubuntu-latest
    name: Publish Backend
    if: ${{ semantic_release.env.NEW_RELEASE_PUBLISHED }} == 'true'
    needs: [build, semantic_release]
    steps:
      - uses: actions/checkout@v2
        name: Checkout
       
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: Publish Backend
        with:
          image: huberit/zbw.auftragsverwaltung.backend
          registry: registry.digitalocean.com
          dockerfile: src/zbw.Auftragsverwaltung.Api/Dockerfile
          username: ${{ env.DUNAME }}
          password: ${{ env.DPW }}
          addLatest: true 
          tags: $TAG , 'latest'
        env:
          DUNAME: ${{ secrets.DOCKER_USERNAME }}
          DPW: ${{ secrets.DOCKER_PASSWORD }}
          TAG: v${{ semantic_release.env.RELEASE_VERSION }}
