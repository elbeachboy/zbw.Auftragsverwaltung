@page "/Account/login"
@using System.ComponentModel.DataAnnotations
@inject IAuthService _authenticationService
@inject NavigationManager _navigationManager
@inject ISnackbar _snackbar
@inject INavMenuStateService _navMenuState
<MudContainer MaxWidth="MaxWidth.Medium">
    <MudAlert Severity="Severity.Info">
        Username: testuser<br />
        Password: Test@1
    </MudAlert>

    <EditForm Model="@_model" OnValidSubmit="@HandleValidSubmit" >
        <DataAnnotationsValidator />
        <MudCard>
            <MudCardContent>
                <div class="mud-input-control mud-input-input-control">
                    <div class="mud-input mud-input-text mud-input-underline mud-shrink">
                        <InputText @bind-Value="_model.Username" class="mud-input-slot mud-input-root mud-input-root-text" />
                    </div>
                    <label class="mud-input-label mud-input-label-animated mud-input-label-text mud-input-label-inputcontrol">
                        Username
                    </label>
                    <ValidationMessage For="@(() => _model.Username)" />
                </div>

                <div class="mud-input-control mud-input-input-control ">
                    <div class="mud-input mud-input-text mud-input-underline mud-shrink">
                        <InputText @bind-Value="_model.Password" type="password" class="mud-input-slot mud-input-root mud-input-root-text"/>
                    </div>
                    <label class="mud-input-label mud-input-label-animated mud-input-label-text mud-input-label-inputcontrol">
                        Password
                    </label>
                    <ValidationMessage For="@(() => _model.Password)" />
                </div>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Disabled="@_loading">
                    @if (_loading)
                    {
                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                        <MudText Class="ms-2">Logging In</MudText>
                    }
                    else
                    {
                        <MudText>Login</MudText>
                    }
                </MudButton>
            </MudCardActions>
        </MudCard>
    </EditForm>

</MudContainer>

@code {
    private readonly Model _model = new Model();
    private bool _loading;
    private string _error;

    protected override void OnInitialized()
    {
        if (_authenticationService.User != null)
        {
            _navigationManager.NavigateTo("");
        }
    }

    private async void HandleValidSubmit()
    {
        _loading = true;
        try
        {
            await _authenticationService.Login(_model.Username, _model.Password);
            _navMenuState.NotifyChanged();
            var returnUrl = _navigationManager.QueryString("returnUrl") ?? "/";
            await Task.Delay(100);
            _navigationManager.NavigateTo(returnUrl);
        }
        catch (Exception ex)
        {
            _error = ex.Message;
            _snackbar.Add(_error, Severity.Warning);
            _loading = false;
            StateHasChanged();
        }
    }

    private class Model
    {
        [Required]
        public string Username { get; set; }

        [Required]
        public string Password { get; set; }
    }
}
